# 根查询
type Query{
	users(query:String):[User!]!
	posts(query:String): [Post]!
	comments:[Comment!]!
}

# 根突变
type Mutation{
	createUser(data:CreateUserInput!):User!
	createPost(data:CreatePostInput!):Post!
	createComment(data:CreateCommentInput!):Comment!
	deleteUser(id:ID!):User!
	deletePost(id:ID!):Post!
	deleteComment(id:ID!):Comment!
	updateUser(id:ID!,data:UpdateUserInput!):User!
	updatePost(id:ID!,data:UpdatePostInput!):Post!
	updateComment(id:ID!,data:UpdateCommentInput!):Comment!
}

# 订阅类型
type Subscription{
	comment(postId:ID!):commentSubscriptionPayload!
	post:postSubscriptionPayload!
}
# 文章订阅
type postSubscriptionPayload{
	mutation:MutationType!
	data:Post!
}
type commentSubscriptionPayload{
	mutation:MutationType!
	data:Comment!
}
# MutationType当中定义的就是字符串
enum MutationType{
	CREATED
	UPDATED
	DELETED
}

input UpdateCommentInput{
	text: String
}
input UpdatePostInput{
	title:String
	body:String
	published:Boolean
}
input UpdateUserInput{
	name:String
	email:String
	age:Int
}
# 创建用户的输入类型
input CreateUserInput{
	name:String!
	email:String!
	age:Int
}
# 创建文章的输入类型
input CreatePostInput{
	title:String!
	body:String!
	published:Boolean!
	author:ID!
}
# 创建评论的输入类型
input CreateCommentInput{
	text:String!
	author:ID!
	post:ID!
}
# 用户类型
type User{
	id:ID!
	name:String!
	email:String!
	age:Int
	posts:[Post]!
	comments:[Comment!]!
}
# 文章类型
type Post{
	id:ID!
	title:String!
	body:String!
	published:Boolean!
	author:User!
	comments:[Comment]!
}
# 评论类型
type Comment{
	id:ID!
	text: String!
	author:User!
	post:Post!
}